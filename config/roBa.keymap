#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6
#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

/ {
    combos {
        compatible = "zmk,combos";

        semicolon {
            bindings = <&kp SEMI>;
            key-positions = <18 19>;
        };

        to_conf {
            bindings = <&sl 5>;
            key-positions = <40 39>;
        };
    };

    behaviors {
        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W  &kp E      &kp R         &kp T                                       &kp Y  &kp U  &kp I      &kp O       &kp P
&kp A         &kp S  &kp D      &lt 2 F       &kp G         &none            &kp LANG1    &kp H  &kp J  &kp K      &kp L       &kp BACKSPACE
&mt LSHIFT Z  &kp X  &kp C      &kp V         &kp B         &kp ESC          &kp LANG2    &kp N  &kp M  &kp COMMA  &kp PERIOD  &kp ENTER
&kp TAB       &none  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_WIN  &lt 1 SPACE      &lt 3 SPACE  &sl 1                                &kp LG(SPACE)
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        NUM_CHAR {
            bindings = <
&none                   &none         &none         &none         &none                            &kp ASTRK     &kp MINUS      &kp PLUS      &kp EQUAL      &kp FSLH
&kp NUMBER_1            &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5       &none       &trans  &kp NUMBER_6  &kp N7         &kp NUMBER_8  &kp N9         &kp N0
&mt LSHIFT EXCLAMATION  &kp AT_SIGN   &kp HASH      &kp DOLLAR    &kp PERCENT  &trans      &trans  &kp CARET     &kp AMPERSAND  &kp ASTERISK  &kp LESS_THAN  &kp GREATER_THAN
&trans                  &trans        &trans        &trans        &trans       &none       &none   &trans                                                    &trans
            >;
        };

        CHAR {
            bindings = <
&kp ESC         &kp GRAVE          &none          &none   &none                                       &kp LEFT_PARENTHESIS  &kp RPAR           &kp PLUS         &kp ASTERISK      &kp PIPE
&kp MINUS       &kp SQT            &kp SEMICOLON  &none   &kp COMMA   &none        &kp SQT            &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp EXCLAMATION  &kp QUESTION      &kp SLASH
&kp UNDERSCORE  &kp DOUBLE_QUOTES  &kp COLON      &none   &kp PERIOD  &kp ESC      &kp DOUBLE_QUOTES  &kp LBRC              &kp RBRC           &kp LESS_THAN    &kp GREATER_THAN  &kp BACKSLASH
&trans          &trans             &trans         &trans  &trans      &none        &none              &trans                                                                      &trans
            >;
        };

        ARROW {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans    &trans    &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans    &trans    &trans  &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                 &trans
            >;
        };

        MOUSE {
            bindings = <
&none  &none  &none  &none  &none                          &none       &none  &none     &none     &none
&none  &none  &none  &none  &none  &none      &none        &none       &none  &none     &none     &none
&none  &none  &none  &none  &none  &none      &none        &none       &none  &mkp MB1  &mkp MB2  &none
&none  &none  &none  &none  &none  &none      &kp K_PASTE  &kp K_COPY                             &kp LG(SPACE)
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        configure {
            bindings = <
&none  &none  &none  &none  &none                    &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none      &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none      &none  &to 6  &to 7  &none  &none  &none
&none  &none  &none  &none  &none  &none      &none  &none                       &to 0
            >;
        };

        BLUETOOTH {
            bindings = <
&none         &none         &none         &none         &none                    &none       &none       &none  &none  &none
&bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none  &none      &none  &bt BT_NXT  &bt BT_PRV  &none  &none  &none
&none         &none         &none         &none         &none  &none      &none  &none       &none       &none  &none  &none
&none         &none         &none         &none         &none  &none      &none  &none                                 &to 0
            >;
        };

        cavesofqud {
            bindings = <
&kp MINUS           &kp N7  &kp N8     &kp N9    &kp R                               &none  &kp N      &kp I  &kp Q      &kp ESC
&kp A               &kp N4  &kp N5     &kp N6    &kp F     &none          &none      &kp H  &kp J      &kp E  &kp X      &none
&mt KP_PLUS LSHIFT  &kp N1  &kp N2     &kp N3    &kp K     &kp L          &none      &none  &kp LC(F)  &kp K  &kp LC(E)  &none
&kp ESC             &kp N0  &kp LCTRL  &kp LALT  &kp LGUI  &kp SPACE      &kp SPACE  &kp P                               &to 0
            >;
        };
    };
};
